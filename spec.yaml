openapi: 3.0.3
info:
  title: Docspera Integration Endpoints - OpenAPI 3.0.0
  x-logo:
    url: https://docspera.com/assets/D3/pic/Logo-Full-White-Padded.png
    backgroundColor: "#0096FA"
    href: https://docspera.com
  contact:
    email: luca@docspera.com
  license:
    name: Proprietary
  version: 1.0.0
servers:
  - url: https://int.velys.docvisor.dev/api/v1
    name: DEV
  - url: https://int.velys.docharp.com/api/v1
    name: SIT
  - url: https://int.velys.docvisor.com/api/v1
    name: QA
  - url: https://int.carecoordination.velys.jnj/api/v1
    name: PROD
tags:
  - name: integration
    description: Integration Endpoints
paths:
  /organizations/{practiceId}/ingest:
    post:
      tags:
        - integration
      summary: Ingest Record Set
      description: Ingest a new record set, including a patient
      operationId: ingest
      parameters:
        - name: practiceId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        $ref: '#/components/requestBodies/IngestOperation'
        required: true
      responses:
        '200':
          $ref: '#/components/requestBodies/IngestOperation'
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
components:
  schemas:
    Value:
      type: object
      properties:
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valuePeriod:
          $ref: '#/components/schemas/Period'
    Quantity:
      type: object
      properties:
        comparator:
          type: string
          enum: [ '<', '<=', '>=', '>' ]
        unit:
          type: string
        system:
          type: string
          format: uri
        code:
          type: string
        value:
          type: string
      required:
      - value
      - unit
    Condition:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          $ref: '#/components/schemas/CodeableConcept'
        diagnosticReports:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticReport'
      required:
      - code
      - diagnosticReports
    Observation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        value:
          $ref: '#/components/schemas/Value'
      required:
      - id
      - code
      - effectiveDateTime
      - value
    DiagnosticReport:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
        category:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        issued:
          type: string
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
      required:
      - status
      - category
      - code
      - effectiveDateTime
      - issued
      - observations
    CodeableConcept:
      type: object
      required:
      - coding
      properties:
        coding:
          $ref: '#/components/schemas/Coding'
        text:
          type: string
    Coding:
      type: array
      items:
        type: object
        properties:
          code:
            type: string
          system:
            type: string
            format: uri
          display:
            type: string
        required: [ code, system ]
    Period:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
      - start
      - end
    Patient:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: DocSpera Patient ID
        name:
          type: object
          properties:
            family:
              type: string
              example: "Santarella"
            given:
              type: array
              items:
                type: string
              example: ['Luca', 'M']
        mrn:
          type: string
          example: "LS12345"
        dob:
          type: string
          format: date
          example: "1965-01-01"
        insurance:
          type: object
          nullable: true
          properties:
            type:
              type: string
            policy:
              type: string
            group:
              type: string
            period:
              $ref: '#/components/schemas/Period'
          required:
          - id
          - type
          - policy
          - group
          - period
        gender:
          type: string
          enum: ['male','female','other']
        sex:
          type: string
          enum: [ 'male','female' ]
        demographics:
          type: object
          properties:
            ethnicity:
              type: string
            race:
              type: string
          required:
          - ethnicity
          - race
        homeAddress:
          type: object
          properties:
            line_1:
              type: string
              nullable: true
            line_2:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            zip:
              type: string
              nullable: true
            country:
              type: string
              nullable: true
          required:
            - line_1
            - line_2
            - city
            - state
            - zip
            - country
        mobilePhone:
          type: string
          format: phone
          nullable: true
        homePhone:
          type: string
          format: phone
          nullable: true
        email:
          type: string
          format: email
          nullable: true
      required:
      - name
      - mrn
      - dob
      - insurance
      - gender
      - demographics
      - supplemental
      - homeAddress
      - mobilePhone
      - homePhone
      - email
      - home
    Participant:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
        type:
          type: integer
        sub:
          type: integer
        specialty:
          type: string
      required:
      - user_id
      - name
      - type
      - sub
      - specialty
      example: {
        "user_id": 2239,
        "name": "Rachel Green",
        "type": 1,
        "sub": 1,
        "specialty": "Orthopaedics"
      }
    Appointment:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
              enum: ['booked','cancelled']
            description:
              type: string
            serviceType:
              type: array
              items:
                  $ref: '#/components/schemas/CodeableConcept'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
          required:
          - status
          - description
          - start
          - end
          - created
          - serviceType
          - participants
    Surgery:
      allOf:
        - $ref: '#/components/schemas/Appointment'
        - type: object
          properties:
            assigned:
              $ref: '#/components/schemas/Participant'
    Reaction:
      type: object
      properties:
        manifestation:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        description:
          type: string
        severity:
          type: string
      required:
      - manifestation
      - description
      - severity
    Allergy:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        clinicalStatus:
          type: string
        verificationStatus:
          type: string
        type:
          type: string
        criticality:
          type: string
        category:
          type: array
          items:
            type: string
        code:
          $ref: '#/components/schemas/CodeableConcept'
        onsetDateTime:
          type: string
        recordedDate:
          type: string
        reaction:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Reaction'
      required:
      - clinicalStatus
      - verificationStatus
      - type
      - criticality
      - category
      - code
      - onsetDateTime
      - recordedDate
      - reaction
    MedicationAdministration:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
          required: [id, status]
    Prescription:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
          required: [id, status]
    Medication:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        prescription:
          $ref: '#/components/schemas/Prescription'
        administrations:
          type: array
          items:
            $ref: '#/components/schemas/MedicationAdministration'
      required:
      - code
      - prescription
      - administration
  requestBodies:
    IngestOperation:
      description: Ingest Operation
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              patient:
                $ref: '#/components/schemas/Patient'
              surgery:
                $ref: '#/components/schemas/Surgery'
              clinicalAppointments:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
              conditions:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
              allergies:
                type: array
                items:
                  $ref: '#/components/schemas/Allergy'
              pastProcedures:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      $ref: '#/components/schemas/CodeableConcept'
                    performedDateTime:
                      type: string
                      format: datetime
                    status:
                      type: string
                  required:
                  - code
                  - performedDateTime
                  - status
              medications:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
              observations:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
            required:
            - patient
            - surgery
            - clinicalAppointments
            - conditions
            - allergies
            - pastProcedures
            - medications
            - observations
  securitySchemes:
    okta_auth:
      type: oauth2
