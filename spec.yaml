openapi: 3.0.3
info:
  title: Docspera Integration Endpoints - OpenAPI 3.0.0
  x-logo:
    url: https://docspera.com/assets/D3/pic/Logo-Full-White-Padded.png
    backgroundColor: "#0096FA"
    href: https://docspera.com
  contact:
    email: luca@docspera.com
  license:
    name: Proprietary
  version: 1.0.0
servers:
  - url: https://int.velys.docvisor.dev/api/v1
    description: DEV
  - url: https://int.velys.docharp.com/api/v1
    description: SIT
  - url: https://int.velys.docvisor.com/api/v1
    description: QA
  - url: https://int.carecoordination.velys.jnj/api/v1
    description: PROD
tags:
  - name: integration
    description: Integration Endpoints
paths:
  /organizations/{practiceId}/ingest:
    parameters:
      - name: practiceId
        required: true
        in: path
        schema:
          type: number
    post:
      tags:
        - integration
      summary: Ingest Record Set
      description: Ingest a new record set, including a patient
      operationId: ingest

      requestBody:
        $ref: '#/components/requestBodies/IngestOperation'
      responses:
        '200':
          $ref: '#/components/requestBodies/IngestOperation'
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
    put:
      tags:
        - integration
      summary: Update Record Set
      description: Update a record set, including a patient
      operationId: ingest
      parameters:
        - name: practiceId
          required: true
          in: path
          schema:
            type: number
      requestBody:
        $ref: '#/components/requestBodies/IngestOperation'
      responses:
        '200':
          $ref: '#/components/requestBodies/IngestOperation'
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - patient
      summary: Get patient
      description: Get a patient record
      operationId: getPatient
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '404':
          description: Not found
    put:
      tags:
        - patient
      summary: Update Patient
      description: Update a patient record
      operationId: updatePatient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/observations:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - observations
      summary: Get observations
      description: Get a patient's observation records
      operationId: getObservations
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
        '404':
          description: Not found
  /organizations/{practiceId}/patients/{patientId}/observations/{observationId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
      - name: observationId
        description: Observation ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - observations
      summary: Get observation
      description: Get a patient's observation record
      operationId: getObservations
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
        '404':
          description: Not found
    put:
      tags:
        - observations
      summary: Update Observation
      description: Update a patient's observation record
      operationId: updateObservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/medications:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - medications
      summary: Get medications
      description: Get a patient's medication records
      operationId: getMedications
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
        '404':
          description: Not found
  /organizations/{practiceId}/patients/{patientId}/medications/{medicationId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
      - name: medicationId
        description: Medication ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - medications
      summary: Get medication
      description: Get a patient's medication record
      operationId: getMedication
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        '404':
          description: Not found
    put:
      tags:
        - medications
      summary: Update Medication
      description: Update a patient's medication record
      operationId: updateMedication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/conditions:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - conditions
      summary: Get conditions
      description: Get a patient's condition records
      operationId: getConditions
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
        '404':
          description: Not found
  /organizations/{practiceId}/patients/{patientId}/conditions/{conditionId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
      - name: conditionId
        description: Condition ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - conditions
      summary: Get condition
      description: Get a patient's condition record
      operationId: getCondition
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        '404':
          description: Not found
    put:
      tags:
        - conditions
      summary: Update Condition
      description: Update a patient's condition record
      operationId: updateCondition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/allergies:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - allergies
      summary: Get allergies
      description: Get a patient's allergy records
      operationId: getAllergies
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Allergy'
        '404':
          description: Not found
  /organizations/{practiceId}/patients/{patientId}/allergies/{allergyId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
      - name: allergyId
        description: Allergy ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - allergies
      summary: Get allergy
      description: Get a patient's allergy record
      operationId: getAllergy
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allergy'
        '404':
          description: Not found
    put:
      tags:
        - allergies
      summary: Update Allergy
      description: Update a patient's allergy record
      operationId: updateAllergy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Allergy'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allergy'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/appointments:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - appointments
      summary: Get appointments
      description: Get a patient's appointment records
      operationId: getAppointments
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '404':
          description: Not found
  /organizations/{practiceId}/patients/{patientId}/appointments/{appointmentId}:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
      - name: appointmentId
        description: Appointment ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - appointments
      summary: Get appointment
      description: Get a patient's appointment record
      operationId: getAppointment
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Not found
    put:
      tags:
        - appointments
      summary: Update Appointment
      description: Update a patient's appointment record
      operationId: updateAppointment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
  /organizations/{practiceId}/patients/{patientId}/surgery:
    parameters:
      - name: practiceId
        description: Practice ID
        required: true
        in: path
        schema:
          type: number
      - name: patientId
        description: Patient ID
        required: true
        in: path
        schema:
          type: number
    get:
      tags:
        - surgery
      summary: Get surgery
      description: Get a patient's surgery record
      operationId: getSurgery
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
        '404':
          description: Not found
    put:
      tags:
        - surgery
      summary: Update Surgery
      description: Update a patient's surgery record
      operationId: updateSurgery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Surgery'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
        '404':
          description: Not found
        '405':
          description: Invalid input
      security:
        - okta_auth:
            - write
components:
  schemas:
    Value:
      type: object
      properties:
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valuePeriod:
          $ref: '#/components/schemas/Period'
    Quantity:
      type: object
      properties:
        comparator:
          type: string
          enum: [ '<', '<=', '>=', '>' ]
        unit:
          type: string
        system:
          type: string
          format: uri
        code:
          type: string
        value:
          type: string
      required:
        - value
        - unit
    Condition:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          $ref: '#/components/schemas/CodeableConcept'
        onset:
          type: string
          format: date-time
          description: Date of condition onset
        diagnosticReports:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticReport'
      required:
        - code
        - diagnosticReports
    Observation:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        value:
          $ref: '#/components/schemas/Value'
      required:
        - id
        - code
        - effectiveDateTime
        - value
    DiagnosticReport:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
        category:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        issued:
          type: string
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
      required:
        - status
        - category
        - code
        - effectiveDateTime
        - issued
        - observations
    CodeableConcept:
      type: object
      required:
        - coding
      properties:
        coding:
          $ref: '#/components/schemas/Coding'
        text:
          type: string
    Coding:
      type: array
      items:
        type: object
        properties:
          code:
            type: string
          system:
            type: string
            format: uri
          display:
            type: string
        required: [ code, system ]
    Period:
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
        - start
        - end
    Patient:
      type: object
      properties:
        id:
          type: string
          readOnly: true
          description: DocSpera Patient ID
        name:
          type: object
          properties:
            family:
              type: string
              example: "Santarella"
            given:
              type: array
              items:
                type: string
              example: [ 'Luca', 'M' ]
        mrn:
          type: string
          example: "LS12345"
        dob:
          type: string
          format: date
          example: "1965-01-01"
        insurance:
          type: object
          nullable: true
          properties:
            type:
              type: string
            policy:
              type: string
            group:
              type: string
            period:
              $ref: '#/components/schemas/Period'
          required:
            - id
            - type
            - policy
            - group
            - period
        gender:
          type: string
          enum: [ 'male','female','other' ]
        sex:
          type: string
          enum: [ 'male','female' ]
        demographics:
          type: object
          properties:
            ethnicity:
              type: string
            race:
              type: string
          required:
            - ethnicity
            - race
        homeAddress:
          type: object
          properties:
            line_1:
              type: string
              nullable: true
            line_2:
              type: string
              nullable: true
            city:
              type: string
              nullable: true
            state:
              type: string
              nullable: true
            zip:
              type: string
              nullable: true
            country:
              type: string
              nullable: true
          required:
            - line_1
            - line_2
            - city
            - state
            - zip
            - country
        mobilePhone:
          type: string
          format: phone
          nullable: true
        homePhone:
          type: string
          format: phone
          nullable: true
        email:
          type: string
          format: email
          nullable: true
      required:
        - name
        - mrn
        - dob
        - insurance
        - gender
        - demographics
        - supplemental
        - homeAddress
        - mobilePhone
        - homePhone
        - email
        - home
    Participant:
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
          readOnly: true
        type:
          type: integer
          readOnly: true
        specialty:
          type: string
          readOnly: true
      required:
        - user_id
        - name
        - type
        - specialty
      example: {
        "user_id": 2239,
        "name": "Rachel Green",
        "type": 1,
        "sub": 1,
        "specialty": "Orthopaedics"
      }
    Appointment:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
              enum: [ 'booked','cancelled' ]
            description:
              type: string
            serviceType:
              type: array
              items:
                $ref: '#/components/schemas/CodeableConcept'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
          required:
            - status
            - description
            - start
            - end
            - created
            - serviceType
            - participants
    Surgery:
      allOf:
        - $ref: '#/components/schemas/Appointment'
        - type: object
          properties:
            assigned:
              $ref: '#/components/schemas/Participant'
    Reaction:
      type: object
      properties:
        manifestation:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        description:
          type: string
        severity:
          type: string
      required:
        - manifestation
        - description
        - severity
    Allergy:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        clinicalStatus:
          type: string
        verificationStatus:
          type: string
        type:
          type: string
        criticality:
          type: string
        category:
          type: array
          items:
            type: string
        code:
          $ref: '#/components/schemas/CodeableConcept'
        onsetDateTime:
          type: string
        recordedDate:
          type: string
        reaction:
          type: array
          minItems: 0
          items:
            $ref: '#/components/schemas/Reaction'
      required:
        - clinicalStatus
        - verificationStatus
        - type
        - criticality
        - category
        - code
        - onsetDateTime
        - recordedDate
        - reaction
    MedicationAdministration:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
          required: [ id, status ]
    Prescription:
      allOf:
        - $ref: '#/components/schemas/Period'
        - type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
          required: [ id, status ]
    Medication:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        prescription:
          $ref: '#/components/schemas/Prescription'
        administrations:
          type: array
          items:
            $ref: '#/components/schemas/MedicationAdministration'
      required:
        - code
        - prescription
        - administration
  requestBodies:
    IngestOperation:
      description: Ingest Operation
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              patient:
                $ref: '#/components/schemas/Patient'
              surgery:
                $ref: '#/components/schemas/Surgery'
              clinicalAppointments:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
              conditions:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
              allergies:
                type: array
                items:
                  $ref: '#/components/schemas/Allergy'
              pastProcedures:
                type: array
                items:
                  type: object
                  properties:
                    code:
                      $ref: '#/components/schemas/CodeableConcept'
                    performedDateTime:
                      type: string
                      format: datetime
                    status:
                      type: string
                  required:
                    - code
                    - performedDateTime
                    - status
              medications:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
              observations:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
            required:
              - patient
              - surgery
              - clinicalAppointments
              - conditions
              - allergies
              - pastProcedures
              - medications
              - observations
  securitySchemes:
    okta_auth:
      type: oauth2
